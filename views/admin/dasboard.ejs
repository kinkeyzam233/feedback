<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Admin Dashboard - Feedback Management</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    body {
      min-height: 100vh;
      background-image: url('/image/college.JPG');
      background-size: cover;
      background-position: center;
      background-repeat: no-repeat;
      position: relative;
      color: white;
    }

    body::before {
      content: "";
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: rgba(0, 0, 0, 0.7);
      z-index: 0;
    }

    .container {
      position: relative;
      z-index: 1;
      max-width: 1200px;
      margin: 0 auto;
      padding: 20px;
    }

    /* Navbar */
    .navbar {
      background-color: rgba(15, 23, 42, 0.9);
      padding: 1rem 2rem;
      border-radius: 8px;
      margin-bottom: 20px;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .logo {
      display: flex;
      align-items: center;
      gap: 1rem;
      color: white;
      font-weight: bold;
      font-size: 1.5rem;
    }

    .logo img {
      height: 40px;
      width: auto;
    }

    .nav-links {
      display: flex;
      gap: 1rem;
    }

    .nav-links a {
      color: white;
      text-decoration: none;
      padding: 0.5rem 1rem;
      border-radius: 4px;
      transition: background-color 0.3s;
    }

    .nav-links a:hover {
      background-color: rgba(255, 255, 255, 0.1);
    }

    h1 {
      margin-bottom: 20px;
      color: white;
      font-size: 24px;
    }

    input, select, button {
      padding: 10px;
      border: 1px solid rgba(255, 255, 255, 0.2);
      border-radius: 4px;
      font-size: 14px;
      background: rgba(255, 255, 255, 0.1);
      color: white;
    }

    input::placeholder {
      color: rgba(255, 255, 255, 0.7);
    }

    select {
      background: rgba(15, 23, 42, 0.9);
    }

    option {
      background: #1a1a1a;
      color: white;
    }

    .search-bar {
      display: flex;
      gap: 10px;
      margin-bottom: 20px;
    }

    table {
      width: 100%;
      border-collapse: collapse;
      background: rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(10px);
      border-radius: 8px;
      overflow: hidden;
      margin-bottom: 20px;
    }

    th, td {
      padding: 12px 15px;
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
      color: white;
    }

    th {
      background: rgba(0, 0, 0, 0.3);
      font-weight: 600;
    }

    tr:hover {
      background: rgba(255, 255, 255, 0.05);
    }

    .sentiment, .status {
      padding: 6px 12px;
      border-radius: 20px;
      font-size: 12px;
      display: inline-block;
    }

    .sentiment.positive { background: rgba(21, 87, 36, 0.3); color: #4ade80; }
    .sentiment.negative { background: rgba(114, 28, 36, 0.3); color: #f87171; }
    .sentiment.neutral { background: rgba(108, 117, 125, 0.3); color: #e2e8f0; }
    
    .status.new { background: rgba(12, 84, 96, 0.3); color: #67e8f9; }
    .status.reviewed { background: rgba(108, 117, 125, 0.3); color: #e2e8f0; }

    button.action-btn {
      background: #5c3bff;
      color: white;
      border: none;
      cursor: pointer;
      border-radius: 4px;
      padding: 8px 16px;
      transition: background-color 0.3s;
    }

    button.action-btn:hover {
      background: #4c31d1;
    }

    .stats {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 20px;
      margin-top: 20px;
    }

    .stat-card {
      background: rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(10px);
      padding: 20px;
      border-radius: 8px;
      text-align: center;
      transition: transform 0.3s;
    }

    .stat-card:hover {
      transform: translateY(-5px);
    }

    .stat-card h3 {
      margin-bottom: 10px;
      color: rgba(255, 255, 255, 0.9);
      font-size: 1.1em;
    }

    .stat-card span {
      font-weight: bold;
      font-size: 24px;
      color: white;
    }

    /* Modal Styles */
    .modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.5);
      z-index: 1000;
      backdrop-filter: blur(5px);
    }

    .modal-content {
      position: relative;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background: rgba(15, 23, 42, 0.9);
      padding: 2rem;
      border-radius: 8px;
      max-width: 400px;
      width: 90%;
      text-align: center;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      border: 1px solid rgba(255, 255, 255, 0.1);
    }

    .modal h2 {
      color: white;
      margin-bottom: 1rem;
      font-size: 1.5rem;
    }

    .modal p {
      color: rgba(255, 255, 255, 0.8);
      margin-bottom: 1.5rem;
    }

    .modal-buttons {
      display: flex;
      justify-content: center;
      gap: 1rem;
    }

    .modal-btn {
      padding: 0.75rem 1.5rem;
      border-radius: 4px;
      cursor: pointer;
      font-weight: 500;
      transition: all 0.3s;
    }

    .confirm-btn {
      background-color: #dc2626;
      color: white;
      border: none;
    }

    .confirm-btn:hover {
      background-color: #b91c1c;
    }

    .cancel-modal-btn {
      background-color: transparent;
      color: white;
      border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .cancel-modal-btn:hover {
      background-color: rgba(255, 255, 255, 0.1);
    }

    @media (max-width: 768px) {
      .navbar {
        flex-direction: column;
        gap: 1rem;
        text-align: center;
        padding: 1rem;
      }

      .nav-links {
        flex-direction: column;
        gap: 0.5rem;
      }

      .search-bar {
        flex-direction: column;
      }

      .stats {
        grid-template-columns: 1fr;
      }

      .modal-content {
        width: 95%;
        padding: 1.5rem;
      }
    }
  </style>
</head>
<body>
  <div class="container">
    <nav class="navbar">
      <div class="logo">
        <img src="/image/logo.png" alt="Logo" />
        <span>Feedback System</span>
      </div>
      <div class="nav-links">
        <a href="/admin/landing_admin">Home</a>
        <a href="/admin/dashboard" class="active">Dashboard</a>
        <button onclick="showLogoutConfirmation()" class="action-btn">Logout</button>
      </div>
    </nav>

    <!-- Logout Confirmation Modal -->
    <div id="logoutModal" class="modal">
      <div class="modal-content">
        <h2>Confirm Logout</h2>
        <p>Are you sure you want to logout?</p>
        <div class="modal-buttons">
          <button class="modal-btn cancel-modal-btn" onclick="hideLogoutConfirmation()">Cancel</button>
          <form action="/admin/logout" method="POST" style="display: inline;">
            <button type="submit" class="modal-btn confirm-btn">Logout</button>
          </form>
        </div>
      </div>
    </div>

    <h1>Feedback Management Dashboard</h1>
    
    <div class="search-bar">
      <input id="searchInput" placeholder="Search feedback..." />
      <select id="statusFilter">
        <option value="all">All Status</option>
        <option value="new">New</option>
        <option value="reviewed">Reviewed</option>
      </select>
    </div>
    
    <table>
      <thead>
        <tr>
          <th>Date</th>
          <th>Feedback</th>
          <th>Sentiment</th>
          <th>Status</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody id="feedbackTableBody">
        <% feedbackData.forEach(item => { %>
          <tr>
            <td><%= item.date %></td>
            <td><%= item.feedback %></td>
            <td><span class="sentiment <%= item.sentiment %>"><%= item.sentiment %></span></td>
            <td><span class="status <%= item.status %>"><%= item.status %></span></td>
            <td>
              <%_ if(item.status === 'new') { _%>
                <button class="action-btn" onclick="markAsReviewed('<%- item.id %>')">Mark as Reviewed</button>
              <%_ } else { _%>
                No actions needed
              <%_ } _%>
            </td>
          </tr>
        <% }) %>
      </tbody>
    </table>

    <div class="stats">
      <div class="stat-card">
        <h3>Total Feedback</h3>
        <span id="totalFeedback"><%- feedbackData.length %></span>
      </div>
      <div class="stat-card">
        <h3>New</h3>
        <span id="newCount"><%- feedbackData.filter(f => f.status === 'new').length %></span>
      </div>
      <div class="stat-card">
        <h3>Reviewed</h3>
        <span id="reviewedCount"><%- feedbackData.filter(f => f.status === 'reviewed').length %></span>
      </div>
    </div>
  </div>

  <script>
    const feedbackData = JSON.parse('<%- JSON.stringify(feedbackData) %>');

    const tableBody = document.getElementById('feedbackTableBody');
    const searchInput = document.getElementById('searchInput');
    const statusFilter = document.getElementById('statusFilter');

    function renderFeedbackTable(data) {
      tableBody.innerHTML = '';
      data.forEach(item => {
        const tr = document.createElement('tr');
        tr.innerHTML = `
          <td>${item.date}</td>
          <td>${item.feedback}</td>
          <td><span class="sentiment ${item.sentiment}">${item.sentiment}</span></td>
          <td><span class="status ${item.status}">${item.status}</span></td>
          <td>${item.status === 'new' 
                ? `<button class="action-btn" onclick="markAsReviewed('${item.id}')">Mark as Reviewed</button>` 
                : 'No actions needed'}</td>
        `;
        tableBody.appendChild(tr);
      });

      document.getElementById('totalFeedback').textContent = data.length;
      document.getElementById('newCount').textContent = data.filter(f => f.status === 'new').length;
      document.getElementById('reviewedCount').textContent = data.filter(f => f.status === 'reviewed').length;
    }

    function filterFeedback() {
      const searchTerm = searchInput.value.toLowerCase();
      const status = statusFilter.value;
      const filtered = feedbackData.filter(fb => {
        const matchesSearch = fb.feedback.toLowerCase().includes(searchTerm);
        const matchesStatus = status === 'all' || fb.status === status;
        return matchesSearch && matchesStatus;
      });
      renderFeedbackTable(filtered);
    }

    function markAsReviewed(id) {
      feedbackData = feedbackData.map(item =>
        item.id === id ? { ...item, status: 'reviewed' } : item
      );
      filterFeedback();
      alert('Feedback marked as reviewed');
    }

    searchInput.addEventListener('input', filterFeedback);
    statusFilter.addEventListener('change', filterFeedback);

    renderFeedbackTable(feedbackData);

    // Logout confirmation functions
    function showLogoutConfirmation() {
      document.getElementById('logoutModal').style.display = 'block';
      // Prevent scrolling of the background
      document.body.style.overflow = 'hidden';
    }

    function hideLogoutConfirmation() {
      document.getElementById('logoutModal').style.display = 'none';
      // Restore scrolling
      document.body.style.overflow = 'auto';
    }

    // Close modal when clicking outside
    window.onclick = function(event) {
      const modal = document.getElementById('logoutModal');
      if (event.target === modal) {
        hideLogoutConfirmation();
      }
    }

    // Close modal on escape key
    document.addEventListener('keydown', function(event) {
      if (event.key === 'Escape') {
        hideLogoutConfirmation();
      }
    });
  </script>
</body>
</html>
